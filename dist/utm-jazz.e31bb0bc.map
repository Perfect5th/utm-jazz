{"version":3,"sources":["note.js","jazz/note-translator.js","node_modules/web-audio-oscillators/dist/sine.js","node_modules/web-audio-oscillators/dist/square.js","node_modules/web-audio-oscillators/dist/sawtooth.js","node_modules/web-audio-oscillators/dist/triangle.js","node_modules/web-audio-oscillators/dist/chiptune.js","node_modules/web-audio-oscillators/dist/organ.js","node_modules/web-audio-oscillators/dist/organ2.js","node_modules/web-audio-oscillators/dist/bass.js","node_modules/web-audio-oscillators/dist/brass.js","node_modules/@mohayonao/wave-tables/index.js","node_modules/web-audio-oscillators/dist/index.js","jazz.js","jazz/index.js","machinetable/machinetable.js","machinetable/index.js","utm/directions.js","utm/utm.js","utm/index.js","index.js"],"names":["Note","frequency","tied","NoteTranslator","tape","octave","freqChart","notes","map","f","y","length","row","x","currVal","freq","note","push","AudioContext","window","webkitAudioContext","Jazz","oscillatorTypes","oscillators","playing","secondsPerNote","noteLength","attack","staff","context","createOscillators","i","stem","oscillator","gainNode","createGain","type","connect","destination","start","setNotes","creationMethod","createTone","bind","createTiedTone","createRest","gain","linearRampToValueAtTime","setValueAtTime","stop","o","currentTime","suspend","MachineTable","states","symbols","machineTable","Array","state","symbol","instruction","generate","write","getRandomInt","move","max","min","Math","ceil","floor","random","directions","UP","RIGHT","DOWN","LEFT","UTM","operationCount","read","getInstruction","lastRead","changeState","toWrite","direction","moveUp","moveRight","moveDown","moveLeft","newState","parseInt","OUTPUT_CLASS","j","document","addEventListener","utm","jazz","tapeElement","element","getTape","reduce","acc","rowElement","createElement","textContent","toString","append","className","querySelector","begin","noteTranslator","translate","freqs","getFreq","play"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA,OACnB;AACA;AACA,cAAYC,SAAZ,EAAqC;AAAA,MAAdC,IAAc,uEAAP,KAAO;;AAAA;;AACnC,OAAKD,SAAL,GAAiBA,SAAjB;AACA,OAAKC,IAAL,GAAYA,IAAZ;AACD;;;;;;;;;;;ACNH;;;;;;;;;;IAEqBC;;;AACnB,0BAAYC,IAAZ,EAA8B;AAAA,QAAZC,MAAY,uEAAH,CAAG;;AAAA;;AAC5B,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,SAAL,GAAiB,CAAC,CAAD,EAAI,QAAJ,EAAc,QAAd,EAAwB,QAAxB,EAAkC,QAAlC,EAA4C,QAA5C,EAAsD,QAAtD,EAAgE,QAAhE,EAA0E,QAA1E,EAAoF,QAApF,EAA8F,QAA9F,EAAwG,QAAxG,EAAkH,QAAlH,EAA4H,QAA5H,EAAsI,QAAtI,EAAgJ,QAAhJ,EAA0J,QAA1J,CAAjB;AACA,SAAKC,KAAL,GAAa,EAAb;AAEA,SAAKD,SAAL,GAAiB,KAAKA,SAAL,CAAeE,GAAf,CAAmB,UAAAC,CAAC;AAAA,aAAIA,CAAC,YAAI,CAAJ,EAASJ,MAAT,CAAL;AAAA,KAApB,CAAjB;AACD;;;;gCAEW;AACV,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKN,IAAL,CAAUO,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,YAAME,GAAG,GAAG,EAAZ;;AAEA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,IAAL,CAAUM,CAAV,EAAaC,MAAjC,EAAyCE,CAAC,EAA1C,EAA8C;AAC5C,cAAMC,OAAO,GAAG,KAAKV,IAAL,CAAUM,CAAV,EAAaG,CAAb,CAAhB;AACA,cAAME,IAAI,GAAG,KAAKT,SAAL,CAAeQ,OAAf,CAAb;AACA,cAAMZ,IAAI,GAAGY,OAAO,GAAG,CAAvB;AACA,cAAME,IAAI,GAAG,IAAIhB,aAAJ,CAASe,IAAT,EAAeb,IAAf,CAAb;AACAU,UAAAA,GAAG,CAACK,IAAJ,CAASD,IAAT;AACD;;AAED,aAAKT,KAAL,CAAWU,IAAX,CAAgBL,GAAhB;AACD;AACF;;;8BAES;AACR,aAAO,KAAKL,KAAZ;AACD;;;;;;;;AC7BH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"utm-jazz.e31bb0bc.map","sourceRoot":"..","sourcesContent":["export default class Note {\n  // REQUIRES: frequency, positive float\n  //           tied, boolean: if the note is tied to the next note\n  constructor(frequency, tied = false) {\n    this.frequency = frequency;\n    this.tied = tied;\n  }\n}\n","import Note from './note';\n\nexport default class NoteTranslator {\n  constructor(tape, octave = 0) {\n    this.tape = tape;\n    this.freqChart = [0, 65.40639, 73.41619, 82.40689, 87.30706, 97.99886, 110.0000, 123.4708, 130.8128, 65.40639, 73.41619, 82.40689, 87.30706, 97.99886, 110.0000, 123.4708, 130.8128];\n    this.notes = [];\n\n    this.freqChart = this.freqChart.map(f => f * (2 ** octave));\n  }\n\n  translate() {\n    for (let y = 0; y < this.tape.length; y++) {\n      const row = [];\n\n      for (let x = 0; x < this.tape[y].length; x++) {\n        const currVal = this.tape[y][x];\n        const freq = this.freqChart[currVal];\n        const tied = currVal > 8;\n        const note = new Note(freq, tied);\n        row.push(note);\n      }\n\n      this.notes.push(row);\n    }\n  }\n\n  getFreq() {\n    return this.notes;\n  }\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Source: https://www.w3.org/TR/webaudio/#oscillator-coefficients\n\nvar imag = exports.imag = Array.from({ length: 8192 }, function (_, n) {\n  return n === 1 ? 1 : 0;\n});\n\nvar real = exports.real = imag.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Source: https://www.w3.org/TR/webaudio/#oscillator-coefficients\n\nvar imag = exports.imag = Array.from({ length: 8192 }, function (_, n) {\n  return n === 0 ? 0 : 2 / (n * Math.PI) * (1 - Math.pow(-1, n));\n});\n\nvar real = exports.real = imag.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Source: https://www.w3.org/TR/webaudio/#oscillator-coefficients\n\nvar imag = exports.imag = Array.from({ length: 8192 }, function (_, n) {\n  return n === 0 ? 0 : Math.pow(-1, n + 1) * (2 / (n * Math.PI));\n});\n\nvar real = exports.real = imag.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Source: https://www.w3.org/TR/webaudio/#oscillator-coefficients\n\nvar imag = exports.imag = Array.from({ length: 8192 }, function (_, n) {\n  return n === 0 ? 0 : 8 * Math.sin(n * Math.PI / 2) / Math.pow(Math.PI * n, 2);\n});\n\nvar real = exports.real = imag.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Source: https://github.com/chipbell4/nes-sequencer\n\nvar real = exports.real = Array.from({ length: 8192 }, function (_, n) {\n  return n === 0 ? 0 : 4 / (n * Math.PI) * Math.sin(Math.PI * n * 0.18);\n});\n\nvar imag = exports.imag = real.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar imag = exports.imag = [0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1];\n\nvar real = exports.real = imag.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar real = exports.real = [0, 0.8, 0.6, 0.6, 0.7, 0.6, 0, 0.8, 0.3, 1];\n\nvar imag = exports.imag = real.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar real = exports.real = [0, 1, 0.8144329896907216, 0.20618556701030927, 0.020618556701030927];\n\nvar imag = exports.imag = real.map(function () {\n  return 0;\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// Source: https://www.sitepoint.com/using-fourier-transforms-web-audio-api/#synthesizing-a-horn\n\nvar real = exports.real = [0, 0.4, 0.4, 1, 1, 1, 0.3, 0.7, 0.6, 0.5, 0.9, 0.8];\n\nvar imag = exports.imag = real.map(function () {\n  return 0;\n});","module.exports = {\n  \"Bass\": require(\"./Bass.json\"),\n  \"BassAmp360\": require(\"./BassAmp360.json\"),\n  \"BassFuzz\": require(\"./BassFuzz.json\"),\n  \"BassFuzz2\": require(\"./BassFuzz2.json\"),\n  \"BassSubDub\": require(\"./BassSubDub.json\"),\n  \"BassSubDub2\": require(\"./BassSubDub2.json\"),\n  \"Brass\": require(\"./Brass.json\"),\n  \"BritBlues\": require(\"./BritBlues.json\"),\n  \"BritBluesDriven\": require(\"./BritBluesDriven.json\"),\n  \"Buzzy1\": require(\"./Buzzy1.json\"),\n  \"Buzzy2\": require(\"./Buzzy2.json\"),\n  \"Celeste\": require(\"./Celeste.json\"),\n  \"ChorusStrings\": require(\"./ChorusStrings.json\"),\n  \"Dissonant1\": require(\"./Dissonant1.json\"),\n  \"Dissonant2\": require(\"./Dissonant2.json\"),\n  \"DissonantPiano\": require(\"./DissonantPiano.json\"),\n  \"DroppedSaw\": require(\"./DroppedSaw.json\"),\n  \"DroppedSquare\": require(\"./DroppedSquare.json\"),\n  \"DynaEPBright\": require(\"./DynaEPBright.json\"),\n  \"DynaEPMed\": require(\"./DynaEPMed.json\"),\n  \"Ethnic33\": require(\"./Ethnic33.json\"),\n  \"Full1\": require(\"./Full1.json\"),\n  \"Full2\": require(\"./Full2.json\"),\n  \"GuitarFuzz\": require(\"./GuitarFuzz.json\"),\n  \"Harsh\": require(\"./Harsh.json\"),\n  \"MklHard\": require(\"./MklHard.json\"),\n  \"Noise\": require(\"./Noise.json\"),\n  \"Organ2\": require(\"./Organ2.json\"),\n  \"Organ3\": require(\"./Organ3.json\"),\n  \"PhonemeAh\": require(\"./PhonemeAh.json\"),\n  \"PhonemeBah\": require(\"./PhonemeBah.json\"),\n  \"PhonemeEe\": require(\"./PhonemeEe.json\"),\n  \"PhonemeO\": require(\"./PhonemeO.json\"),\n  \"PhonemeOoh\": require(\"./PhonemeOoh.json\"),\n  \"PhonemePopAhhhs\": require(\"./PhonemePopAhhhs.json\"),\n  \"Piano\": require(\"./Piano.json\"),\n  \"Pulse\": require(\"./Pulse.json\"),\n  \"PutneyWavering\": require(\"./PutneyWavering.json\"),\n  \"Saw\": require(\"./Saw.json\"),\n  \"Square\": require(\"./Square.json\"),\n  \"TB303Square\": require(\"./TB303Square.json\"),\n  \"Throaty\": require(\"./Throaty.json\"),\n  \"Triangle\": require(\"./Triangle.json\"),\n  \"Trombone\": require(\"./Trombone.json\"),\n  \"TwelveOpTines\": require(\"./TwelveOpTines.json\"),\n  \"TwelveStringGuitar1\": require(\"./TwelveStringGuitar1.json\"),\n  \"WarmSaw\": require(\"./WarmSaw.json\"),\n  \"WarmSquare\": require(\"./WarmSquare.json\"),\n  \"WarmTriangle\": require(\"./WarmTriangle.json\"),\n  \"Wurlitzer\": require(\"./Wurlitzer.json\"),\n  \"Wurlitzer2\": require(\"./Wurlitzer2.json\")\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _sine = require(\"./sine\");\n\nvar sine = _interopRequireWildcard(_sine);\n\nvar _square = require(\"./square\");\n\nvar square = _interopRequireWildcard(_square);\n\nvar _sawtooth = require(\"./sawtooth\");\n\nvar sawtooth = _interopRequireWildcard(_sawtooth);\n\nvar _triangle = require(\"./triangle\");\n\nvar triangle = _interopRequireWildcard(_triangle);\n\nvar _chiptune = require(\"./chiptune\");\n\nvar chiptune = _interopRequireWildcard(_chiptune);\n\nvar _organ = require(\"./organ\");\n\nvar organ = _interopRequireWildcard(_organ);\n\nvar _organ2 = require(\"./organ2\");\n\nvar organ2 = _interopRequireWildcard(_organ2);\n\nvar _bass = require(\"./bass\");\n\nvar bass = _interopRequireWildcard(_bass);\n\nvar _brass = require(\"./brass\");\n\nvar brass = _interopRequireWildcard(_brass);\n\nvar _waveTables = require(\"@mohayonao/wave-tables\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexports.default = Object.entries({\n  sine: sine,\n  square: square,\n  square2: _waveTables.DroppedSquare,\n  sawtooth: sawtooth,\n  triangle: triangle,\n  triangle2: _waveTables.WarmTriangle,\n  chiptune: chiptune,\n  organ: organ,\n  organ2: organ2,\n  organ3: _waveTables.Organ2,\n  organ4: _waveTables.Organ3,\n  organ5: _waveTables.Dissonant2,\n  bass: bass,\n  bass2: _waveTables.Bass,\n  bass3: _waveTables.BassSubDub,\n  bass4: _waveTables.BassFuzz2,\n  brass: brass,\n  brass2: _waveTables.Trombone,\n  aah: _waveTables.PhonemeAh,\n  ooh: _waveTables.PhonemeOoh,\n  eeh: _waveTables.PhonemeEe,\n  buzz: _waveTables.Buzzy1,\n  buzz2: _waveTables.DynaEPBright,\n  dissonance: _waveTables.DissonantPiano\n}).reduce(function (obj, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      type = _ref2[0],\n      coefficients = _ref2[1];\n\n  return Object.assign(obj, _defineProperty({}, type, createOscillator.bind(null, coefficients)));\n}, {});\n\n\nfunction createOscillator(_ref3, ctx) {\n  var real = _ref3.real,\n      imag = _ref3.imag;\n\n  var oscillator = ctx.createOscillator();\n  oscillator.setPeriodicWave(ctx.createPeriodicWave(Float32Array.from(real), Float32Array.from(imag)));\n  return oscillator;\n}","import oscillators from 'web-audio-oscillators';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\n\nexport default class Jazz {\n  // REQUIRES: ocsillatorTypes array of String oscillator types\n  constructor(oscillatorTypes) {\n    this.oscillatorTypes = oscillatorTypes;\n\n    this.oscillators = [];\n    this.playing = false;\n\n    this.secondsPerNote = 0.25;\n    this.noteLength = 0.9;\n    this.attack = 0.1;\n  }\n\n  // REQUIRES: a 2D musical staff: a collection of Notes\n  // MODIFIES: this\n  // EFFECTS: plays the musical staff to the default destination (speakers)\n  play(staff) {\n    this.context = new AudioContext();\n    this.createOscillators(staff);\n\n    this.playing = true;\n  }\n\n  // REQUIRES: a 2D musical staff: a collection of Hz values\n  // MODIFIES: this\n  // EFFECTS: creates oscillators for each stem and attaches them context\n  createOscillators(staff) {\n    for (let i = 0; i < staff.length; i++) {\n      const stem = staff[i];\n      const oscillator = oscillators[this.oscillatorTypes[i]](this.context);\n      const gainNode = this.context.createGain();\n\n      oscillator.type = this.oscillatorTypes[i];\n      oscillator.gainNode = gainNode;\n      oscillator.connect(gainNode).connect(this.context.destination);\n      oscillator.start();\n\n      this.setNotes(oscillator, stem);\n      this.oscillators.push(oscillator);\n    }\n  }\n\n  // REQUIRES: unstarted oscillator, stem: array of Hz values\n  // MODIFIES: this\n  // EFFECTS: applies notes from stem to oscillator with proper timing\n  setNotes(oscillator, stem) {\n    for (let i = 0; i < stem.length; i++) {\n      let creationMethod = this.createTone.bind(this);\n\n      if (stem[i].tied) {\n        creationMethod = this.createTiedTone.bind(this);\n      }\n\n      if (stem[i].frequency === 0) {\n        creationMethod = this.createRest.bind(this);\n      }\n\n      creationMethod(oscillator, stem[i].frequency, i);\n    }\n\n    this.createRest(oscillator, 0, stem.length);\n  }\n\n  // REQUIRES: oscillator, frequency: float, i: position\n  // MODIFIES: oscillator\n  // EFFECTS: adds an un-tied note tone to the oscillator\n  createTone(oscillator, frequency, i) {\n    const {gain} = oscillator.gainNode;\n\n    gain.linearRampToValueAtTime(0.001, i * this.secondsPerNote);\n    gain.linearRampToValueAtTime(1, (i + this.attack) * this.secondsPerNote);\n    gain.setValueAtTime(1, (i + this.noteLength) * this.secondsPerNote);\n    oscillator.frequency.setValueAtTime(frequency, i * this.secondsPerNote);\n    oscillator.stop((i + 1) * this.secondsPerNote);\n  }\n\n  createTiedTone(oscillator, frequency, i) {\n    const {gain} = oscillator.gainNode;\n\n    oscillator.frequency.setValueAtTime(frequency, i * this.secondsPerNote);\n    gain.setValueAtTime(1, (i + this.noteLength) * this.secondsPerNote);\n    oscillator.stop((i + 1) * this.secondsPerNote);\n  }\n\n  // REQUIRES: oscillator, i: position\n  // MODIFIES: oscillator\n  // EFFECTS: adds silence/rest to the oscillator\n  createRest(oscillator, frequency, i) {\n    const {gain} = oscillator.gainNode;\n\n    gain.linearRampToValueAtTime(0.01, i * this.secondsPerNote);\n    oscillator.stop((i + 1) * this.secondsPerNote);\n  }\n\n  // MODIFIES: this\n  // EFFECTS: stops the current playback\n  stop() {\n    for (const o of this.oscillators) {\n      o.stop(this.context.currentTime);\n    }\n\n    this.oscillators = [];\n\n    if (this.context) {\n      this.context.suspend();\n    }\n\n    this.playing = false;\n  }\n}\n","import NoteTranslator from './note-translator';\n\nexport {default} from './jazz';\nexport {NoteTranslator};\n","export default class MachineTable {\n  // Machine table class\n\n  // EFFECTS: creates an array that has state # of columns, symbol # of rows.\n  constructor(states, symbols = 17) {\n    this.states = states;\n    this.symbols = symbols;\n    this.machineTable = [];\n    for (let i = 0; i < states; i++) {\n      this.machineTable.push(new Array(symbols));\n    }\n  }\n\n  getInstruction(state, symbol) {\n    let instruction = this.machineTable[state][symbol];\n    if (instruction) {\n      return instruction;\n    }\n\n    this.machineTable[state][symbol] = this.generate();\n    instruction = this.machineTable[state][symbol];\n    return instruction;\n  }\n\n  // EFFECTS: generates new instructions for machine table in form\n  generate() {\n    return {\n      write: this.getRandomInt(this.symbols - 1),\n      move: this.getRandomInt(3),\n      state: this.getRandomInt(this.states - 1)\n    };\n  }\n\n  getRandomInt(max) {\n    const min = Math.ceil(0);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n}\n","export {default} from './machinetable';","export const directions = {\n  UP: 0,\n  RIGHT: 1,\n  DOWN: 2,\n  LEFT: 3\n};\n","import MachineTable from '../machinetable';\nimport {directions} from './directions';\n\nexport default class UTM {\n  // REQUIRES 2D array tape\n  //          positive int operationCount\n  constructor(tape, operationCount, states = 4) {\n    this.x = 0;\n    this.y = 0;\n\n    this.machineTable = new MachineTable(states);\n    this.tape = tape;\n    this.operationCount = operationCount;\n\n    this.state = 0;\n  }\n\n  // MODIFIES: this\n  // EFFECTS: performs a number of operations equal to operationCount\n  begin() {\n    for (let i = 0; i < this.operationCount; i++) {\n      this.read();\n\n      const {write, move, state} = this.machineTable.getInstruction(\n        this.state, this.lastRead);\n\n      this.write(write);\n      this.move(move);\n      this.changeState(state);\n    }\n  }\n\n  // MODIFIES: this\n  // EFFECTS: reads the symbol that is currently under the tape.\n  read() {\n    this.lastRead = this.tape[this.y][this.x];\n  }\n\n  // MODIFIES: this\n  // EFFECTS: writes a symbol to the current tape location based on state.\n  write(toWrite) {\n    this.tape[this.y][this.x] = toWrite;\n  }\n\n  // MODIFIES: this\n  // EFFECTS: moves on the tape in the direction given by current state.\n  move(direction) {\n    switch (direction) {\n      case directions.UP:\n        return this.moveUp();\n      case directions.RIGHT:\n        return this.moveRight();\n      case directions.DOWN:\n        return this.moveDown();\n      case directions.LEFT:\n        return this.moveLeft();\n      default:\n    }\n  }\n\n  // MODIFIES: this\n  // EFFECTS: moves up on the tape, rolling over to the bottom.\n  moveUp() {\n    if (this.y === 0) {\n      this.y = this.tape.length - 1;\n    } else {\n      this.y--;\n    }\n  }\n\n  // MODIFIES: this\n  // EFFECTS: moves right on the tape, rolling over to the left.\n  moveRight() {\n    if (this.x === this.tape[0].length - 1) {\n      this.x = 0;\n    } else {\n      this.x++;\n    }\n  }\n\n  // MODIFIES: this\n  // EFFECTS: moves down on the tape, rolling over to the top.\n  moveDown() {\n    if (this.y === this.tape.length - 1) {\n      this.y = 0;\n    } else {\n      this.y++;\n    }\n  }\n\n  // MODIFIES: this\n  // EFFECTS: moves left on the tape, rolling over to the right.\n  moveLeft() {\n    if (this.x === 0) {\n      this.x = this.tape[0].length - 1;\n    } else {\n      this.x--;\n    }\n  }\n\n  // MODIFIES: this\n  // EFFECTS: changes to new state as specified by current state.\n  changeState(newState) {\n    this.state = parseInt(newState, 10);\n  }\n\n  // Getters\n  getState() {\n    return this.state;\n  }\n\n  getTape() {\n    return this.tape;\n  }\n}\n","export {default} from './utm';\nexport * from './directions';\n","import Jazz, {NoteTranslator} from './jazz';\nimport UTM, {directions} from './utm';\n\nconst OUTPUT_CLASS = 'tape-snapshot';\n\nconst tape = [];\n\n// Initialize the tape as 4 by 8, full of zeroes.\nfor (let i = 0; i < 4; i++) {\n  tape[i] = [];\n\n  for (let j = 0; j < 8; j++) {\n    tape[i][j] = 0;\n  }\n}\n\n// Once the DOM has loaded:\n// - create a utm object\n// - display the initial tape\n// - run the utm each time the button is pushed, then display tape\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Create a utm object with a machine table\n  const utm = new UTM(tape, 20, 2);\n  const jazz = new Jazz(['organ', 'bass', 'brass', 'bass']);\n\n  // Function that displays the current state of the tap in an HTML div\n  const tapeElement = () => {\n    const element = utm.getTape().reduce((acc, row) => {\n      const rowElement = document.createElement('div');\n\n      rowElement.textContent = row.toString();\n      acc.append(rowElement);\n\n      return acc;\n    }, document.createElement('div'));\n\n    element.className = OUTPUT_CLASS;\n\n    return element;\n  };\n\n  // Run the utm every time the button is clicked, then display the new tape\n  // state\n  document.querySelector('#begin-button').addEventListener('click', () => {\n    utm.begin();\n\n    const noteTranslator = new NoteTranslator(utm.getTape());\n    noteTranslator.translate();\n    const freqs = noteTranslator.getFreq();\n\n    jazz.play(freqs);\n\n    document.querySelector('#turing-tape').append(tapeElement());\n  });\n\n  // Display the initial tape state\n  document.querySelector('#turing-tape').append(tapeElement());\n});\n"]}